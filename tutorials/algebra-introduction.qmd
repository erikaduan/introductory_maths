---
title: "Introduction to algebra" 
author: "Erika Duan"
date: last-modified
format: 
    gfm:
        html-math-method: webtex   
        toc: true
        toc-depth: 2   
        toc-title: Contents  
execute:   
  echo: true     
  output: false   
  warning: false  
---

::: callout-tip
## Summary

This tutorial revises basic algebra concepts and illustrates some algebraic tricks, such as factorisation and working with inequalities, that are useful for solving mathematical problems related to calculus and statistical mathematics.  
:::

```{r}
#| echo: false
#| output: false

# Install R packages -----------------------------------------------------------
# The native pipe operator requires R version 4.1+ 
packages <- c("ggplot2",
              "dplyr")

installed_packages <- packages %in% rownames(installed.packages())

if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

# Attach R packages to the global environment
library("dplyr")
library("ggplot2")
```


# Elementary algebra

Elementary algebra, also referred to as just algebra, is commonly associated with tasks like *Find x if $2x = 6$.* However, it is more useful to think of algebra as a form of expression that allows us to represent infinitely possible terms using a finite one.  

For example, the terms $2x + y$, $4x + 2y$ and $6x + 3y$ are equivalent and infinite variations of this expression exist, with the simplest being $2x + y$. When we read the term $2x + y$, we can intuit that 2 parts of $x$ and 1 part of $y$ are always required (usually to make up another quantity).   

Maths involves being precise with descriptions, and it is much easier to write $2x + y$ than to write 'all possible values where we have 2 parts of one component and one part of a different component'.    

![](../figures/algebra-representation.gif)

Any algebraic term can therefore be decomposed into three components:     

-   Variable(s): a variable is a varying quantity of an entity, usually represented by concise symbols $x$, $y$ or $x_i$ where $i=1, \cdots, n$.     
-   Operator(s): the arithmetic operation applied to variables. *For example, in additive models, the relationship between parameters $y = b_o+b_1x_1 + \cdots + b_nx_n$ is additive and the dependent variable $y$ therefore increases by $b_1$ amount for one unit increase in $x_1$.*     
-   Relative quantity of variable(s): *For example, let $x$ represent the number of eggs and $y$ represent the number of cups of sugar required to make a dessert. The term $x + y$ describes a 1:1 ratio of eggs to sugar whereas the term $2x + y$ describes a 2:1 ratio of eggs to sugar and will result in a very different taste.*    


# Simplifying algebraic terms  

A few rules of algebraic manipulation are:   

-   We can simplify product terms. *For example, $4(x + 2.5y) = 6z \equiv 4x + 10y = 6z$ and $4x + 10y = 6z \equiv 2x + 5y = 3z$.*
-   We cannot further simplify a term if it is the input of another mathematical operator. *For example, (4x + 10y)^2 = 6z 	\not\equiv$ (2x + 5y)^2 = 3z*.  
-   We can add or subtract fractions by multiplying the fractions to form a common denominator. For example, $\tfrac{3y}{x} + \tfrac{4x}{y} = \tfrac{3y^2 + 4x^2}{xy}$.       


# Factorisation




# Manipulating inequalities

Algebraic terms using inequalities are common when we want to prove the existence of an upper or lower bound. *For example, if A is an event in the probability space, we know that the probability of event A occurring is between 0 and 1 inclusive i.e.* $0 \leq P(A) \leq 1$.

There are three rules for manipulating inequalities:

-   Adding or subtracting the same quantity from both sides of an inequality leaves the inequality symbol unchanged.
-   Multiplying or dividing both sides of an inequality by a positive number leaves the inequality symbol unchanged.
-   Multiplying or dividing both sides of an inequality by a negative number reverses the inequality symbol.

![](../figures/algebra-inequality_rules.svg) 

::: panel-tabset
## R

In R, inequality statements are outputted as Boolean values i.e. `TRUE` or `FALSE`.  

```{r}
# Compute inequality in R ------------------------------------------------------
4 <= 4
#> [1] TRUE

4 < 4
#> [1] FALSE

class(4 < 4)
#> [1] "logical"
```

## Python

In Python, inequality statements are also outputted as Boolean values i.e. `True` or `False`.

```{python}
# Compute inequality in Python -------------------------------------------------
4 <= 4
#> True 

type(4 <= 4)
#> <class 'bool'>  
```

## Julia

In Julia, inequality statements are also outputted as Boolean values i.e. `true` or `false`.

```{julia}
# Compute inequality in Julia --------------------------------------------------
4 <= 4
#> true 

typeof(4 <= 4) 
#> true
#> Bool

a = 1
b = 2
c = 3

a < b, a + c < b + c
#> (true, true) 
```
:::






# Resources

-   [Entry](https://plato.stanford.edu/entries/algebra/) on algebra from the Stanford Encyclopedia of Philosophy.    
-   Khan academy [YouTube series](https://www.khanacademy.org/math/algebra-basics/alg-basics-algebraic-expressions#alg-basics-intro-to-variables) on algebra basics.    
-   A [factsheet](https://www.mathcentre.ac.uk/resources/uploaded/mc-bus-manipinequ-2009-1.pdf) on manipulating inequalities from the Uk Maths Centre.   
